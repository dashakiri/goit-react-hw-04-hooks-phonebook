{"version":3,"sources":["components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.js","index.js"],"names":["ListOfContacts","styled","ul","ListItem","li","Button","button","ContactsList","contacts","deleteContact","map","id","name","number","type","onClick","ContactForm","form","Label","label","Input","input","Form","onSubmit","useState","setName","setNumber","handleInputName","e","currentTarget","value","reset","preventDefault","find","contact","toLowerCase","alert","pattern","title","onChange","required","FilterLablel","Filter","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","shortid","generate","prevState","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c8eaae1.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ListOfContacts = styled.ul`\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 3px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  border: 1px solid grey;\n  &:hover,\n  &:focus {\n    background-color: blue;\n    border: 1px solid blue;\n    color: white;\n  }\n`;\n","import React from \"react\";\r\nimport {ListOfContacts, ListItem, Button} from './ContactList.styled';\r\n\r\nexport function ContactsList ({contacts, deleteContact}) {    \r\n    return(\r\n    <ListOfContacts>\r\n    {contacts.map(({id, name, number}) => {\r\n        return (<ListItem key={id}><span>{name}: {number}</span>\r\n        <Button type=\"button\" onClick={() => deleteContact(id)}\r\n        >Delete</Button>\r\n        </ListItem>)\r\n        })}\r\n    </ListOfContacts>        \r\n    )\r\n}\r\n","import styled from \"@emotion/styled\";\n\nexport const ContactForm = styled.form`\n  box-sizing: border-box;\n  padding: 10px;\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: column;\n  width: 350px;\n  height: 150px;\n  border: 1px solid grey;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  &:hover,\n  &:focus {\n    border: 2px solid blue;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  border: 1px solid grey;\n  &:hover,\n  &:focus {\n    background-color: blue;\n    border: 1px solid blue;\n    color: white;\n  }\n`;\n","import { useState } from \"react\";\r\nimport {ContactForm, Button, Label, Input} from './Form.styled.js'\r\n\r\nexport default function Form({onSubmit, contacts}) {\r\nconst [name, setName] = useState('');\r\nconst [number, setNumber] = useState('');\r\n\r\nconst handleInputName = (e) => {\r\n    const {name, value} = e.currentTarget;\r\n    switch(name) {\r\n        case 'name':\r\n            return setName(value);\r\n        case 'number':\r\n            return setNumber(value);\r\n        default:\r\n            return;\r\n    }\r\n};\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const existingContact = contacts.find(contact => \r\n    contact.name.toLowerCase() === name.toLowerCase());\r\n        \r\n    if(existingContact) {\r\n        alert(`${name} is already in the list.`);\r\n        return;\r\n    };\r\n\r\n    onSubmit(name, number);\r\n    reset();\r\n};\r\n\r\nconst reset = () => {\r\n    setName('');\r\n    setNumber('')\r\n};\r\n\r\nreturn(\r\n    <ContactForm onSubmit={handleSubmit}>\r\n    <Label> \r\n        Name\r\n    <Input\r\n    type=\"text\"\r\n    name=\"name\"\r\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n    value={name}\r\n    onChange={handleInputName}\r\n    required  \r\n    // id={nameInputId}\r\n    />\r\n    </Label>\r\n\r\n    <Label>\r\n        Number\r\n    <Input\r\n    type=\"tel\"\r\n    name=\"number\"\r\n    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n    required\r\n    value={number}\r\n    onChange={handleInputName}\r\n    // id={numberInputId}\r\n    />\r\n    </Label>\r\n\r\n    <Button type=\"submit\">Add contact</Button>\r\n    </ContactForm>\r\n);\r\n}\r\n","import styled from \"@emotion/styled\";\n\nexport const FilterLablel = styled.label`\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  &:hover,\n  &:focus {\n    border: 2px solid blue;\n  }\n`;\n","import React from \"react\";\r\nimport {FilterLablel, Input} from './Filter.styled';\r\n\r\nexport function Filter ({value, onChange}) {\r\n    return (\r\n        <FilterLablel>\r\n            Find contacts by name\r\n            <Input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n            />\r\n        </FilterLablel>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport Form from \"./Form/Form\";\nimport { Filter } from \"./Filter/Filter\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse([window.localStorage.getItem(\"contacts\")]) && [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ]\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts((prevState) => [...prevState, contact]);\n  };\n\n  const onFilterChange = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const contactsToRender = () => {\n    return !filter\n      ? contacts\n      : contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        );\n  };\n\n  const deleteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Form onSubmit={formSubmitHandler} contacts={contacts} />\n\n      <h2>Contacts</h2>\n\n      <Filter value={filter} onChange={onFilterChange} />\n\n      <ContactsList\n        contacts={contactsToRender()}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}