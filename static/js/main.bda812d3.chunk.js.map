{"version":3,"sources":["components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.js","index.js"],"names":["ListOfContacts","styled","ul","ListItem","li","Button","button","ContactsList","contacts","deleteContact","map","id","name","number","type","onClick","shortid","generate","ContactForm","form","Label","label","Input","input","Form","state","numberInputId","nameInputId","handleInputName","e","currentTarget","value","setState","handleSubmit","preventDefault","props","find","contact","toLowerCase","alert","onSubmit","reset","this","htmlFor","pattern","title","onChange","required","Component","FilterLablel","Filter","App","filter","formSubmitHandler","prevState","onFilterChange","contactsToRender","includes","currentContacts","localStorage","getItem","parsedCurrentContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bda812d3.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ListOfContacts = styled.ul`\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 3px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  border: 1px solid grey;\n  &:hover,\n  &:focus {\n    background-color: blue;\n    border: 1px solid blue;\n    color: white;\n  }\n`;\n","import React from \"react\";\r\nimport shortid from 'shortid';\r\nimport {ListOfContacts, ListItem, Button} from './ContactList.styled';\r\n\r\nexport function ContactsList ({contacts, deleteContact}) {    \r\n    return(\r\n    <ListOfContacts>\r\n    {contacts.map(({id, name, number}) => {\r\n        return (<ListItem key={shortid.generate()}><span>{name}: {number}</span>\r\n        <Button type=\"button\" onClick={() => deleteContact(id)}\r\n        >Delete</Button>\r\n        </ListItem>)\r\n        })}\r\n    </ListOfContacts>        \r\n    )\r\n}\r\n","import styled from \"@emotion/styled\";\n\nexport const ContactForm = styled.form`\n  box-sizing: border-box;\n  padding: 10px;\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: column;\n  width: 350px;\n  height: 150px;\n  border: 1px solid grey;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  &:hover,\n  &:focus {\n    border: 2px solid blue;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  border: 1px solid grey;\n  &:hover,\n  &:focus {\n    background-color: blue;\n    border: 1px solid blue;\n    color: white;\n  }\n`;\n","import React, { Component } from \"react\";\r\nimport shortid from 'shortid';\r\nimport {ContactForm, Button, Label, Input} from './Form.styled.js'\r\n\r\nexport class Form extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number:''\r\n    }  \r\n\r\n    numberInputId = shortid.generate();\r\n    nameInputId = shortid.generate();\r\n\r\n    handleInputName = (e) => {\r\n        const {name, value} = e.currentTarget;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const existingContact = this.props.contacts.find(contact => \r\n        contact.name.toLowerCase() === this.state.name.toLowerCase());\r\n            \r\n        if(existingContact) {\r\n            alert(`${this.state.name} is already in the list.`);\r\n            return;\r\n        };\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({name: '', number: ''});\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ContactForm onSubmit={this.handleSubmit}>\r\n            <Label htmlFor={this.nameInputId}> \r\n                Name\r\n            <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputName}\r\n            required  \r\n            id={this.nameInputId}\r\n            />\r\n            </Label>\r\n\r\n            <Label htmlFor={this.numberInputId}>\r\n                Number\r\n            <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleInputName}\r\n            id={this.numberInputId}\r\n            />\r\n            </Label>\r\n        \r\n            <Button type=\"submit\">Add contact</Button>\r\n            </ContactForm>\r\n            \r\n            ) \r\n    }\r\n}","import styled from \"@emotion/styled\";\n\nexport const FilterLablel = styled.label`\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  &:hover,\n  &:focus {\n    border: 2px solid blue;\n  }\n`;\n","import React from \"react\";\r\nimport {FilterLablel, Input} from './Filter.styled';\r\n\r\nexport function Filter ({value, onChange}) {\r\n    return (\r\n        <FilterLablel>\r\n            Find contacts by name\r\n            <Input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n            />\r\n        </FilterLablel>\r\n    )\r\n}","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { Form } from \"./Form/Form\";\nimport { Filter } from \"./Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const currentContacts = localStorage.getItem(\"contacts\");\n    const parsedCurrentContacts = JSON.parse(currentContacts);\n\n    if (parsedCurrentContacts) {\n      this.setState({ contacts: parsedCurrentContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (prevContacts !== nextContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  onFilterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  contactsToRender = () => {\n    const { contacts, filter } = this.state;\n    return !filter\n      ? contacts\n      : contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        );\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Phonebook</h2>\n\n        <Form\n          onSubmit={this.formSubmitHandler}\n          contacts={this.state.contacts}\n        />\n\n        <h2>Contacts</h2>\n\n        <Filter value={this.state.filter} onChange={this.onFilterChange} />\n\n        <ContactsList\n          contacts={this.contactsToRender()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}